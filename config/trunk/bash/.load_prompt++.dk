#c IT/Systems
#d Set the system prompt

# We unuse any exisiting prompt packages, just to keep
# loaded dotkit list clean
unuse  -q `dk_rep '*prompt*'`

# CONSOLE color definitions. For xterms, LIGHT == BOLD
COLOR_BLACK='0;30'
COLOR_BLUE='0;34'
COLOR_GREEN='0;32'
COLOR_CYAN='0;36'
COLOR_RED='0;31'
COLOR_PURPLE='0;35'
COLOR_BROWN='0;33'
COLOR_LIGHT_GRAY='0;37'
COLOR_DARK_GRAY='1;30'
COLOR_LIGHT_BLUE='1;34'
COLOR_LIGHT_GREEN='1;32'
COLOR_LIGHT_CYAN='1;36'
COLOR_LIGHT_RED='1;31'
COLOR_LIGHT_PURPLE='1;35'
COLOR_YELLOW='1;33'
COLOR_WHITE='1;37'
COLOR_NONE='0'

function load_color () {
  local LOAD=`uptime | sed -e "s/.*load averag.*: \(.*\...\), \(.*\...\), \(.*\...\)/\1/" -e "s/ //g" `
  local LOAD_SCALED=`echo -en "scale=0\n$LOAD/0.01\nquit\n" | bc `

  local LOAD_LOW_THRESHOLD="50"
  local LOAD_MED_THRESHOLD="150"
  local LOAD_HIGH_THRESHOLD="300"

  # Default to gray, should never see a gray hostname
  local LOAD_COLOR=$COLOR_GRAY

  # Set color based on load threshholds.
  if [[ $LOAD_SCALED -lt $LOAD_LOW_THRESHOLD ]]; then
    LOAD_COLOR=$COLOR_LIGHT_BLUE
  elif [[ $LOAD_SCALED -lt $LOAD_MED_THRESHOLD ]]; then
    LOAD_COLOR=$COLOR_LIGHT_GREEN
  elif [[ $LOAD_SCALED -lt $LOAD_HIGH_THRESHOLD ]]; then
    LOAD_COLOR=$COLOR_YELLOW
  else 
    LOAD_COLOR=$COLOR_LIGHT_RED
  fi

  echo $LOAD_COLOR
}

# Check for TERM, only set titlebar in terms claiming to be xterm*
case $TERM in
    # Xterms handle color and setting the titlebar
    xterm*)
        local TITLEBAR='\[\033]0;\u@\h:\w\007\]'
        PS1="$TITLEBAR\[\033[01;32m\]\u@\[\033[\$(load_color)m\]\h \[\033[01;34m\]\w $ \[\033[00m\]"
        ;;
    # linux terminal should do color, but no need to set title.
    linux)
        PS1="\[\033[01;32m\]\u@\[\033[\$(load_color)m\]\h \[\033[01;34m\]\w $ \[\033[00m\]"
        ;;
    # Color free catchall for non-xterm terminals
    *)
        PS1='[\u@\h \w]\$ '
        ;;
esac

PROMPT_COMMAND=''
PS2='> '
PS4='+ '


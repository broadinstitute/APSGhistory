#
# Setup hostname
#
echo "post scripts" >/root/post.log
echo "GATEWAYDEV=eth1" >> /etc/sysconfig/network-scripts/ifcfg-eth0
export PRINIC=#TABLE:noderes:THISNODE:primarynic#
if [ -z "$PRINIC" ]
then
    export PRINIC=eth0
fi
IP=$(ifconfig $PRINIC | grep inet | awk '{print $2}' | awk -F: '{print $2}')
if [ -z $IP ]
then
	dhclient eth0
	IP=$(ifconfig $PRINIC | grep inet | awk '{print $2}' | awk -F: '{print $2}')
fi
echo "search #TABLE:site:key=domain:value#" >/etc/resolv.conf
for i in $(echo #TABLE:site:key=nameservers:value# | tr ',' ' ')
do
	echo "nameserver $i"
done >>/etc/resolv.conf
export HOSTNAME=$(host $IP 2>/dev/null | awk '{print $5}' | awk -F. '{print $1}')
hostname $HOSTNAME
#
# Run xCAT post install
#
export MASTER_IP="#XCATVAR:XCATMASTER#"
export MASTER_IPS="#XCATVAR:XCATMASTER#"
export MASTER="#XCATVAR:XCATMASTER#"
cd /tmp
RAND=$(perl -e 'print int(rand(50)). "\n"')
sleep $RAND
for i in $(seq 1 20)
do
	GOTIT=0
	for i in $MASTER_IPS
	do
      wget -l inf -N -r --waitretry=10 --random-wait --retry-connrefused  -t 0 -T 60 ftp://$i/postscripts
		#wget --wait=10 --random-wait --waitretry=10 --retry-connrefused -t 0 -T 60 http://$i/install/autoinst/xcatpost.tar.gz
		if [ "$?" = "0" ]
		then
         if [ -x /usr/sbin/stunnel -o -x /usr/bin/stunnel ]; then #Stop if no stunnel to help the next bit
            echo client=yes > /etc/stunnel/stunnel.conf
            echo foreground=yes >> /etc/stunnel/stunnel.conf
            echo output=/dev/null >> /etc/stunnel/stunnel.conf
            echo verify=0 >> /etc/stunnel/stunnel.conf
            echo '[xcatd]' >> /etc/stunnel/stunnel.conf
            echo accept=400 >> /etc/stunnel/stunnel.conf
            echo connect=$i:3001 >> /etc/stunnel/stunnel.conf

            stunnel &
            STUN_PID=$!
            sleep 1
         fi
         mv $i/postscripts /xcatpost
         rm -rf $i
         chmod +x /xcatpost/*
         /xcatpost/getpostscript.awk |sed -e 's/<[^>]*>//g'|egrep -v '^ *$'|sed -e 's/^ *//' > /tmp/mypostscript
         MYCONT=`cat /tmp/mypostscript`
         while [ -z "$MYCONT" ]; do
            let SLI=$RANDOM%10+10
            sleep $SLI
            /xcatpost/getpostscript.awk |sed -e 's/<[^>]*>//g'|egrep -v '^ *$'|sed -e 's/^ *//' > /tmp/mypostscript
            MYCONT=`cat /tmp/mypostscript`
         done

            
         chmod +x /tmp/mypostscript
			GOTIT=1
			break
		fi
	done
	if [ "$GOTIT" = "1" ]
	then
		break
	fi
	RAND=$(perl -e 'print int(rand(5)). "\n"')
	sleep $RAND
done
cd /xcatpost
#gunzip xcatpost.tar.gz
#tar -xvf xcatpost.tar
#/xcatpost/#TABLE:nodelist:THISNODE:node#
export PATH=/xcatpost:$PATH
/tmp/mypostscript
export NODE=#TABLE:nodelist:THISNODE:node#
export OSVER=#TABLE:nodetype:THISNODE:os#
export ARCH=#TABLE:nodetype:THISNODE:arch#
addsiteyum
sed -i 's/^serial/#serial/' /boot/grub/menu.lst
sed -i 's/^terminal/#terminal/' /boot/grub/menu.lst
updateflag.awk $MASTER 3002
cd /
rm -Rf /xcatpost
rm -f /tmp/mypostscript
rm -f /etc/stunnel/stunnel.conf
mkdir /local/scratch
chmod -R 1777 /local/scratch
ifup eth1
echo "Installing cfengine"
wget -O - http://www.broadinstitute.org/~jbh/centos-setup.sh | bash
echo "Linking tcsh"
ln -sin /bin/tcsh /usr/bin/tcsh
##tune4fs for tuning.  tune4fs is backwards-compatible, but tune2fs is not; therefore, we are using tune4fs to both ext3 and ext4.
for x in `fdisk -l | grep -v swap | awk '/Linux/ {print $1}'`; do tune4fs -c 0 -i 0 $x; done

#Change this if build server key changes:
echo "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAwVLbQ8Rlt93pgghzzNh7bd8vjKE2oAftYkSy4WwkZBjY8XemVrRm3c3+F2cvYABftnrgbxJn1soTGSJVyoEwHfSZoPtWtOYB4ICt5GdSwHXbgRxBYqFiJA8fPycWeF4qc7GXicVxVpDAcA0Lz+6XVNWQXWSNqAsNyqFXYzf/VavOIkqW4Xr/hxfLsBsDgffo5YlhSQbLJmsz/c3Zo0q3u/PRPB+viMQ2ulwkYdR5dyuP9VNrAMu7NtMK4Lpb+2fskJqVGYJU4PzzV/OE5DsGby95+n90JxfaDgmHlhRIraAADX10dCjmX9iHy4XrhIWDbOjm9H9FNCSnvehHLNPacw== root@hal9000.broadinstitute.org" > /root/.ssh/authorized_keys
chmod 600 /root/.ssh

#Change this if trp key changes:
echo "ssh-dss AAAAB3NzaC1kc3MAAACBAMdPwPbhgProKuYZZLUVRGrVoJYsWoR0Vyd+MGvv7HWngBvNLQ4i3CoixE34wpWhdS/jCX/nYkKWlt+AsENOUrxpmE/uMTp18If6gx8PPxZQkoz7sDQ85ICpeo2HS73jHVdvb2ssLdY3tj5Aqt7lqyMWVFNEF0Ub3S/Zrvx5pD4XAAAAFQDwUVkm5hx0Wc3TwpTfxFKdO40Y6wAAAIB2klA/DaHRZ8UNlcjdu7ie4xd8jaVtc3ZLLdxC4wM98AgCmj9MgwbNpxS8XdTrWgra+Tj+SuN9u6Z9WnC1shHiJYqMG0y3SJDYfgT654GpggeZxiFgmq9baFfr69F3GfXgkzC+nEqaXn5aLwr6QDb+slTKK3Ind7hX/LikzHLNrwAAAIAmRk7ROAMTgGYu7qUNMx1r4z4bJO9dQol/sYPcw5jmd+H1NUC1RQxcY798b0hHVtH04Thzb2EsJtxkz0HeTZkZSa3zptKYSR0XjiOgfcK2EcjNdt2rP9IRVDphUb3Tv7kxkYqEilqihf1LKqaMG4hJaTWCAODalHN9sZcH7TBYqQ== root@tryptophan.broad.mit.edu" >> /root/.ssh/authorized_keys

#Is this IBM or Dell?  Plan Accordingly
VENDOR=`dmidecode | awk -F: '/Vendor/ {print $2}' | sed 's/ //' | awk '{print $1}'`
EMAIL="ali@broadinstitute.org"
case $VENDOR in
"IBM")
	FILE="ibmInst.log"
	echo "Downloading DSA" > $FILE
	wget http://download.boulder.ibm.com/ibmdl/pub/systems/support/system_x/ibm_utl_dsa_230i_rhel5_x86-64.rpm >> $FILE
	echo "Installing DSA" >> $FILE
	rpm -Uvh ibm_utl_dsa_230i_rhel5_x86-64.rpm >> $FILE
	echo "Remove Download" >> $FILE
	rm ibm_utl_dsa_230i_rhel5_x86-64.rpm >> $FILE

	cat $FILE | mail -s "xCAT: Dell Specific Config" $EMAIL
        ;;
"Dell")
	FILE="dellInst.log"
	echo "Downloading OMSA" > $FILE
	wget -O - http://linux.dell.com/repo/hardware/latest/bootstrap.cgi | bash >> $FILE
	echo "Installing OMSA" >> $FILE
	yum -y install srvadmin-all >> $FILE

	echo "Copying DSET" >> $FILE
	wget ftp://ftp.us.dell.com/sysman/delldset_v1.8.1.100.bin >> $FILE
	echo "Installing DSET" >> $FILE
	sh delldset_v1.8.1.100.bin -i >> $FILE
	echo "Removing install file" >> $FILE
	rm -f delldset_v1.8.1.100.bin >> $FILE

	echo "Download iDRAC Update" >> $FILE
	wget ftp://ftp.us.dell.com/esm/PEM605_IDRAC_FRMW_LX_R249272.BIN >> $FILE
	echo "Installing iDRAC Update" >> $FILE
	sh PEM605_IDRAC_FRMW_LX_R249272.BIN -q >> $FILE
	echo "Removing iDRAC Update" >> $FILE
	rm -rf PEM605_IDRAC_FRMW_LX_R249272.BIN >> $FILE

	echo "Download BIOS FW Update" >> $FILE
	wget ftp://ftp.us.dell.com/bios/PEM605_BIOS_LX_5.3.2_1.BIN >> $FILE
	echo "Install BIOS FW Update" >> $FILE
	sh PEM605_BIOS_LX_5.3.2_1.BIN -q >> $FILE
	echo "Removing BIOS FW installer" >> $FILE
	rm -rf PEM605_BIOS_LX_5.3.2_1.BIN >> $FILE

	#Dell's convoluted way of enabling virtualization settings en masse
	yum install srvadmin-hapi >> $FILE
	wget ftp://ftp.us.dell.com/sysman/dtk_2.5_80_Linux.iso >> $FILE
	mkdir dtk >> $FILE
	mount -o loop dtk_2.5_80_Linux.iso dtk/ >> $FILE
	cd dtk/isolinux/ >> $FILE
	cp  SA.2 ~/SA.2.gz >> $FILE
	cd; gunzip SA.2.gz >> $FILE
	mkdir stage2 >> $FILE
	cd stage2 >> $FILE
	cpio -i < ../SA.2 >> $FILE
	cd lofs >> $FILE
	mkdir dell >> $FILE
	mount -o loop dell.cramfs dell/ >> $FILE
	mkdir -p /usr/local/sbin ; cp dell/toolkit/bin/syscfg /usr/local/sbin/ >> $FILE
	/usr/local/sbin/syscfg â€“virtualization=enable >> $FILE

	cat $FILE | mail -s "xCAT: Dell Specific Config" $EMAIL
        ;;
*)
        echo "Oops.  Fix me."
esac
#End IBM/Dell Logic.

###Apparently, yum needs utils before switching to our local mirror
yum -y groupinstall yum-utils
##Convert to home-grown mirror and clean
sed -e '15,32s/^mirrorlist/#mirrorlist/g' -e '15,32s/#baseurl=http:\/\/mirror.centos.org/baseurl=http:\/\/mirror.broadinstitute.org\/linux/g' /etc/yum.repos.d/CentOS-Base.repo > CentOS-Base.new
mv -f CentOS-Base.new /etc/yum.repos.d/CentOS-Base.repo

yum clean all
##Install packages now that we are on the mirror
##Groups first
yum -y groupremove "Dialup Networking Support"
GROUPLIST="
	admin-tools
	authoring-and-publishing
	engineering-and-scientific
	development-tools
	development-libs
	editors
	emacs
	gnome-software-development
	graphical-internet
	graphics
	java
	java-development
	kde-software-development
	legacy-network-server
	legacy-software-development
	legacy-software-support
	mail-server
	mono
	mysql
	network-server
	openfabrics-enterprise-distribution
	sql-server
	printing
	ruby
	server-cfg
	system-tools
	text-internet
	web-server
	x-software-development
	base-x
	yum-utils
"   
for GROUP in $GROUPLIST
do
	yum -y install `repoquery -g -l --grouppkgs=all $GROUP`
done

#Individuals Next
PKGLIST="
	pcre-devel
	man
	autofs
	ntp
	tftp
	xinetd
	rsh rsh-server
	psacct
	nfs-utils
	net-snmp
	rsync
	yp-tools ypserv ypbind
	m4
	sendmail-cf
	gdb
	bzip2
	binutils
	openssh-server
	util-linux
	compat-libstdc++-33
	lapack-devel
	blas-devel
	blacs*
	nagios-nrpe
	nagios-plugins-nrpe
	python-imaging.x86_64
	python-imaging-devel.x86_64
"
for PKG in $PKGLIST
do
	yum -y install $PKG
done
#Turn services on
for SERVICE in nrpe ntpd
do
	chkconfig $SERVICE on
done

#Turn services off
for SERVICE in iptables bluetooth cups gpm
do
	chkconfig $SERVICE off
done

##UPGRADE!
yum clean all
yum -y upgrade


exit 0

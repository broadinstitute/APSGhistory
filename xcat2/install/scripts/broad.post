#
# Setup hostname
#
echo "post scripts" >/root/post.log


#export PRINIC=#TABLE:noderes:THISNODE:primarynic#
if [ -z "$PRINIC" ]
then
    export PRINIC=eth0
fi
IP=$(/sbin/ifconfig $PRINIC | grep inet | awk '{print $2}' | awk -F: '{print $2}')
if [ -z $IP ]
then
	dhclient eth0
	IP=$(/sbin/ifconfig $PRINIC | grep inet | awk '{print $2}' | awk -F: '{print $2}')
        FoundBuild=1
fi
echo "search #TABLE:site:key=domain:value#" >/etc/resolv.conf
for i in $(echo #TABLE:site:key=nameservers:value# | tr ',' ' ')
do
	echo "nameserver $i"
done >>/etc/resolv.conf
#export HOSTNAME=$(host $IP 2>/dev/null | awk '{print $5}' | awk -F. '{print $1}')
#hostname $HOSTNAME

#echo "GATEWAYDEV=eth1" >> /etc/sysconfig/network-scripts/ifcfg-eth0

FoundProd=0
echo Trying to determine the right interface in the build network
for dev in $(ifconfig -a | awk '/^eth/ { print $1 }')
do 
if [[ $FoundProd -eq 1 && $FoundBuild -eq 1 ]]; then
  continue
fi

/sbin/ifconfig $dev up 
/sbin/dhclient -pf /tmp/$dev $dev
 if /sbin/ifconfig $dev | grep -q '192.168'
   then 
   export PRINIC=$dev
        FoundBuild=1
 fi
 if /sbin/ifconfig $dev  | egrep -q '69.173.(6[4-9]|7[0-9]|8[0-7])|10.200.[0-9]{1,2}.[0-9]{1,2}' && [ -n "$PRINIC" ]
   then 
   export GATEWAYNIC=$dev
   echo "GATEWAYDEV=$dev" >> /etc/sysconfig/network-scripts/ifcfg-$PRINIC
   sed -i 's/ONBOOT=no/ONBOOT=yes/g;/ONBOOT/ i\BOOTPROTO=dhcp' /etc/sysconfig/network-scripts/ifcfg-$dev
	if /sbin/ifconfig $dev | egrep -q '69.173.(6[4-9]|7[0-9])|10.200.[0-9]{1,2}.[0-9]{1,2}'; then
		echo "Found interface in VLAN32"
		/sbin/ifconfig $dev mtu 9000
		echo "MTU=9000" >> /etc/sysconfig/network-scripts/ifcfg-$dev
                FoundProd=1
	elif /sbin/ifconfig $dev | egrep -q '69.173.(8[0-7])'; then
		echo "Found interface in VLAN18"
		/sbin/ifconfig $dev mtu 1500
		echo "MTU=1500" >> /etc/sysconfig/network-scripts/ifcfg-$dev
                FoundProd=1
	fi
 fi
done

ifup $GATEWAYNIC 

echo GATEWAYDEV=$GATEWAYNIC

# Run xCAT post install
#
export MASTER_IP="#XCATVAR:XCATMASTER#"
export MASTER_IPS="#XCATVAR:XCATMASTER#"
export MASTER="#XCATVAR:XCATMASTER#"
cd /tmp
RAND=$(perl -e 'print int(rand(50)). "\n"')
sleep $RAND
for i in $(seq 1 20)
do
	GOTIT=0
	for i in $MASTER_IPS
	do
      wget -l inf -N -r --waitretry=10 --random-wait --retry-connrefused  -t 0 -T 60 ftp://$i/postscripts
		#wget --wait=10 --random-wait --waitretry=10 --retry-connrefused -t 0 -T 60 http://$i/install/autoinst/xcatpost.tar.gz
		if [ "$?" = "0" ]
		then
         if [ -x /usr/sbin/stunnel -o -x /usr/bin/stunnel ]; then #Stop if no stunnel to help the next bit
            echo client=yes > /etc/stunnel/stunnel.conf
            echo foreground=yes >> /etc/stunnel/stunnel.conf
            echo output=/dev/null >> /etc/stunnel/stunnel.conf
            echo verify=0 >> /etc/stunnel/stunnel.conf
            echo '[xcatd]' >> /etc/stunnel/stunnel.conf
            echo accept=400 >> /etc/stunnel/stunnel.conf
            echo connect=$i:3001 >> /etc/stunnel/stunnel.conf

            stunnel &
            STUN_PID=$!
            sleep 1
         fi
         mv $i/postscripts /xcatpost
         rm -rf $i
         chmod +x /xcatpost/*
         /xcatpost/getpostscript.awk |sed -e 's/<[^>]*>//g'|egrep -v '^ *$'|sed -e 's/^ *//' > /tmp/mypostscript
         MYCONT=`cat /tmp/mypostscript`
         while [ -z "$MYCONT" ]; do
            let SLI=$RANDOM%10+10
            sleep $SLI
            /xcatpost/getpostscript.awk |sed -e 's/<[^>]*>//g'|egrep -v '^ *$'|sed -e 's/^ *//' > /tmp/mypostscript
            MYCONT=`cat /tmp/mypostscript`
         done

            
         chmod +x /tmp/mypostscript
			GOTIT=1
			break
		fi
	done
	if [ "$GOTIT" = "1" ]
	then
		break
	fi
	RAND=$(perl -e 'print int(rand(5)). "\n"')
	sleep $RAND
done
cd /xcatpost
#gunzip xcatpost.tar.gz
#tar -xvf xcatpost.tar
#/xcatpost/#TABLE:nodelist:THISNODE:node#
export PATH=/xcatpost:$PATH
/tmp/mypostscript
export NODE=#TABLE:nodelist:THISNODE:node#
export OSVER=#TABLE:nodetype:THISNODE:os#
export ARCH=#TABLE:nodetype:THISNODE:arch#
addsiteyum
sed -i 's/^serial/#serial/' /boot/grub/menu.lst
sed -i 's/^terminal/#terminal/' /boot/grub/menu.lst
updateflag.awk $MASTER 3002
cd /
rm -Rf /xcatpost
rm -f /tmp/mypostscript
rm -f /etc/stunnel/stunnel.conf
mkdir /local/scratch
chmod -R 1777 /local/scratch

# modprobe seems necessary for reasons unknown.
/sbin/modprobe nfs 
for SERVICE in portmap ypbind autofs nfs
do
	/etc/init.d/$SERVICE restart
	sleep 1
done
echo "Linking tcsh"
ln -sin /bin/tcsh /usr/bin/tcsh
##tune4fs for tuning.  tune4fs is backwards-compatible, but tune2fs is not; therefore, we are using tune4fs to both ext3 and ext4.
for x in `fdisk -l | grep -v swap | awk '/Linux/ {print $1}'`; do tune4fs -c 0 -i 0 $x; done

chmod 600 /root/.ssh

#Change this if trp key changes:
echo "ssh-dss AAAAB3NzaC1kc3MAAACBAMdPwPbhgProKuYZZLUVRGrVoJYsWoR0Vyd+MGvv7HWngBvNLQ4i3CoixE34wpWhdS/jCX/nYkKWlt+AsENOUrxpmE/uMTp18If6gx8PPxZQkoz7sDQ85ICpeo2HS73jHVdvb2ssLdY3tj5Aqt7lqyMWVFNEF0Ub3S/Zrvx5pD4XAAAAFQDwUVkm5hx0Wc3TwpTfxFKdO40Y6wAAAIB2klA/DaHRZ8UNlcjdu7ie4xd8jaVtc3ZLLdxC4wM98AgCmj9MgwbNpxS8XdTrWgra+Tj+SuN9u6Z9WnC1shHiJYqMG0y3SJDYfgT654GpggeZxiFgmq9baFfr69F3GfXgkzC+nEqaXn5aLwr6QDb+slTKK3Ind7hX/LikzHLNrwAAAIAmRk7ROAMTgGYu7qUNMx1r4z4bJO9dQol/sYPcw5jmd+H1NUC1RQxcY798b0hHVtH04Thzb2EsJtxkz0HeTZkZSa3zptKYSR0XjiOgfcK2EcjNdt2rP9IRVDphUb3Tv7kxkYqEilqihf1LKqaMG4hJaTWCAODalHN9sZcH7TBYqQ== root@tryptophan.broad.mit.edu" >> /root/.ssh/authorized_keys

# The following MUST go above the Dell OMSA tools otherwise we end up getting packages from upstream RHEL release that is probable
# a version or more ahead of what we are using 5.4.
if [ -e /etc/enterprise-release ]; then
	yum -y groupinstall yum-utils
	for PACKAGE in autofs ksh tcsh ntp tftp xinetd rsh rsh-server psacct\
	 nfs-utils net-snmp rsync yp-tools ypserv ypbind m4 sendmail-cf gdb\
	 bzip2 binutils openssh-server util-linux compat-libstdc++-33 oracle*\
	sg3_utils xterm vim-enhanced
	do
		yum -y install $PACKAGE
	done

	##Yum customization and package foo
	yum -y groupremove "Dialup Networking Support"
	yum clean all

        # Copy SSH keys to local
        echo "mkdir /mnt/xcat" >> /etc/rc.local
        echo "mount xcat2:/tftpboot/hostkeys /mnt/xcat" >> /etc/rc.local
        echo "cp /mnt/xcat/$(hostname).tgz /tmp" >> /etc/rc.local
        echo "umount /mnt/xcat && rmdir -v /mnt/xcat" >> /etc/rc.local
	# Start CFENGINE3 installation
        wget -P /tmp http://mirror/linux/cfengine3/install.sh
        sh /tmp/install.sh
        #wget -P /tmp http://mirror/linux/cfengine3/cfengine-community-latest.centos5.x86_64.rpm
        #wget -P /tmp http://mirror/linux/cfengine3/base_promises.tar
        #rpm -ivh /tmp/cfengine-community-latest.centos5.x86_64.rpm
        #tar xvfP /tmp/base_promises.tar
        #/sbin/chkconfig --add cfengine3
        #/var/cfengine/bin/cf-key
        #/var/cfengine/bin/cf-agent -f /var/cfengine/inputs/failsafe.cf
        #/var/cfengine/bin/cf-agent -Kv >> /var/log/cfBuild.log

else
	###Apparently, yum needs utils before switching to our local mirror
	yum -y groupinstall yum-utils
	##Convert to home-grown mirror and clean
	echo Changing to Broad-hosted CentOS mirror..
	wget http://mirror/linux/apsg/software/yumConfig/CentOS-Base.repo
	mv -f CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo

        # Copy SSH keys to local
        echo "mkdir /mnt/xcat" >> /etc/rc.local
        echo "mount xcat2:/tftpboot/hostkeys /mnt/xcat" >> /etc/rc.local
        echo "cp /mnt/xcat/$(hostname).tgz /tmp" >> /etc/rc.local
        echo "umount /mnt/xcat && rmdir -v /mnt/xcat" >> /etc/rc.local
	cp /etc/security/limits.conf{,.orig}
	# Start CFENGINE3 installation
        wget -P /tmp http://mirror/linux/cfengine3/install.sh
        sh /tmp/install.sh
        #wget -P /tmp http://mirror/linux/cfengine3/cfengine-community-latest.centos5.x86_64.rpm
        #wget -P /tmp http://mirror/linux/cfengine3/base_promises.tar
	#rpm -ivh /tmp/cfengine-community-latest.centos5.x86_64.rpm
	#tar xvfP /tmp/base_promises.tar
	#/sbin/chkconfig --add cfengine3
	#/var/cfengine/bin/cf-key
	#/var/cfengine/bin/cf-agent -f /var/cfengine/inputs/failsafe.cf
	#/var/cfengine/bin/cf-agent -Kv >> /var/log/cfBuild.log
	#cp /etc/security/limits.conf /tmp/limits.conf-$(date +%Y%m%d.%R)

	##Yum customization and package foo
	echo Updating installed packages..
	wget http://mirror/linux/apsg/software/yumConfig/yum.conf
	rm -f /etc/yum.conf
	mv yum.conf /etc
	yum -y groupremove "Dialup Networking Support"
	yum clean all
	yum -y upgrade || echo "Yum Upgrade Failed" >> /etc/motd
	echo Installing Broad package group "Broad Base"
	yum -y groupinstall "Broad Base" || echo "Yum Broad Base Group Install Failed" >> /etc/motd

fi


#Is this IBM or Dell?  Plan Accordingly
VENDOR=$(dmidecode -s system-manufacturer | cut -f1 -d' ')
case $VENDOR in
"IBM")
	FILE="/var/log/ibmInst.log"
	echo "Downloading DSA" | tee $FILE
	wget http://download.boulder.ibm.com/ibmdl/pub/systems/support/system_x/ibm_utl_dsa_230i_rhel5_x86-64.rpm | tee -a $FILE
	echo "Installing DSA" | tee -a $FILE
	rpm -Uvh ibm_utl_dsa_230i_rhel5_x86-64.rpm | tee -a $FILE
	echo "Remove Download" | tee -a $FILE
	rm ibm_utl_dsa_230i_rhel5_x86-64.rpm | tee -a $FILE

	echo "service cfengine3 stop" >> /etc/rc.local
	if [ -e /etc/enterprise-release ]; then
		echo "ssh cacti /broad/tools/scripts/cacti/addCactiDevice.sh $(hostname) data pzCuQMLd ucd" >> /etc/rc.local
	else
		echo "ssh cacti /broad/tools/scripts/cacti/addCactiDevice.sh $(hostname) centos pzCuQMLd ucd" >> /etc/rc.local
	fi
	echo "rm ~/.ssh/id_rsa; rm ~/.ssh/id_rsa.pub; rm ~/.ssh/copy.sh" >> /etc/rc.local
	echo "rm /etc/ssh/ssh_host*" >> /etc/local
        #Add restored keys
        echo "tar xzvfpP /tmp/$(hostname).tgz /etc/ssh/*key*" >> /etc/rc.local
        echo "rm -f /tmp/$(hostname).tgz" >> /etc/rc.local
	echo "/usr/local/sbin/cf-agent -Kv >> /var/log/cfBuild.log" >> /etc/rc.local
	echo "cp /etc/security/limits.conf /tmp/limits.conf-$(date +%Y%m%d.%R)" >> /etc/rc.local
	echo "/usr/local/sbin/cf-agent -Kv >> /var/log/cfBuild.log" >> /etc/rc.local
	echo "cp /etc/security/limits.conf /tmp/limits.conf-$(date +%Y%m%d.%R)" >> /etc/rc.local
	echo -e "xCAT build from xcat2\n$(hostname) boot\n at $(date) | mail -s \"xCAT build from xCAT2  -- $(hostname) boot ($(date +%F | tr -d '-'))\" xcat@broadinstitute.org" >> /etc/rc.local
	echo " [ $(/broad/tools/scripts/limitschk.sh  | awk '{print $4}') -eq 131072 ] || echo \"Setting Limits Failed\"" >> /etc/rc.local
    echo "pwconv"  >> /etc/rc.local
        echo "echo \"touch /var/lock/subsys/local\" > /etc/rc.local" >> /etc/rc.local

        ;;
# REMEMBER YOU DID THIS
"Dell")
	echo "wget -O - http://mirror.broadinstitute.org/linux/dell/hardware/OMSA_6.2/bootstrap.cgi  | bash" >> /etc/rc.local
	echo "yum -y install srvadmin-all" >> /etc/rc.local

        echo "sh /broad/mirror/linux/dell/hardware/delldset_v2.1.0.112_A00.bin -i" >> /etc/rc.local

        if [ ! -f /usr/bin/serviceTag ]; then
		echo "wget -P /usr/bin http://mirror.broadinstitute.org/linux/dell/hardware/serviceTag" >> /etc/rc.local
        fi

	#Dell's convoluted way of enabling virtualization settings en masse
	if [ ! -f /usr/local/sbin/syscfg ]; then
		echo "
		#Dell's convoluted way of enabling virtualization settings en masse
		service cfengine3 stop
		mkdir /tmp/dtk 
		mount -o loop -o ro /broad/mirror/linux/dell/hardware/dtk_2.5_80_Linux.iso /tmp/dtk/ 
		cd /tmp/dtk/isolinux/ 
		cp  SA.2 ~/SA.2.gz 
		cd; gunzip -f SA.2.gz 
		mkdir stage2 
		cd stage2 
		cpio -i < ../SA.2 
		cd lofs 
		mkdir dell 
		mount -o loop dell.cramfs dell/ 
		mkdir -p /usr/local/sbin ; cp dell/toolkit/bin/syscfg /usr/local/sbin/ 
		/usr/local/sbin/syscfg --virtualization=enable 

		#Cleanup of DTK
		umount /tmp/dtk && rm -rf /tmp/dtk 
		umount ~/stage2/lofs/dell && rm -rf ~/stage2" | tr -d '\t' >> /etc/rc.local
        fi


	#Start firmware update block
	echo "yum -y install dell_ft_install" >> /etc/rc.local
	echo "yum -y install \$(/usr/sbin/bootstrap_firmware)" >> /etc/rc.local
        echo "/usr/sbin/update_firmware -yv | tee /root/bios-update-results.txt" >> /etc/rc.local
	if [ -e /etc/enterprise-release ]; then
		echo "ssh cacti /broad/tools/scripts/cacti/addCactiDevice.sh $(hostname) data pzCuQMLd ucd" >> /etc/rc.local
	else
		echo "ssh cacti /broad/tools/scripts/cacti/addCactiDevice.sh $(hostname) centos pzCuQMLd ucd" >> /etc/rc.local
	fi
	echo "rm ~/.ssh/id_rsa; rm ~/.ssh/id_rsa.pub; rm ~/.ssh/copy.sh" >> /etc/rc.local
	echo "rm /etc/ssh/ssh_host*" >> /etc/rc.local
        #Add restored keys
        echo "tar xzvfpP /tmp/$(hostname).tgz /etc/ssh/*key*" >> /etc/rc.local
        echo "rm -f /tmp/$(hostname).tgz" >> /etc/rc.local

        for i in {0..1}; do
		echo "/usr/local/sbin/cf-agent -Kv >> /var/log/cfBuild.log" >> /etc/rc.local
        done

	echo -e "xCAT build from xcat2\n$(hostname) boot\n at $(date) | mail -s \"xCAT build from xCAT2  -- $(hostname) boot ($(date +%F | tr -d '-'))\" xcat@broadinstitute.org" >> /etc/rc.local
echo "pwconv"  >> /etc/rc.local
        
        echo "echo \"touch /var/lock/subsys/local\" > /etc/rc.local && shutdown -rf 1" >> /etc/rc.local

        ;;
"HP")
    
	if [ -e /etc/enterprise-release ]; then
		echo "ssh cacti /broad/tools/scripts/cacti/addCactiDevice.sh $(hostname) data pzCuQMLd ucd" >> /etc/rc.local
	else
		echo "ssh cacti /broad/tools/scripts/cacti/addCactiDevice.sh $(hostname) centos pzCuQMLd ucd" >> /etc/rc.local
	fi
	echo "rm ~/.ssh/id_rsa; rm ~/.ssh/id_rsa.pub; rm ~/.ssh/copy.sh" >> /etc/rc.local
	echo "rm /etc/ssh/ssh_host*" >> /etc/rc.local
        #Add restored keys
        echo "tar xzvfpP /tmp/$(hostname).tgz /etc/ssh/*key*" >> /etc/rc.local
        echo "rm -f /tmp/$(hostname).tgz" >> /etc/rc.local

	for i in {0..1}; do
		echo "/usr/local/sbin/cf-agent -Kv >> /var/log/cfBuild.log" >> /etc/rc.local
	done

	echo -e "xCAT build from xcat2\n$(hostname) boot\n at $(date) | mail -s \"xCAT build from xCAT2  -- $(hostname) boot ($(date +%F | tr -d '-'))\" xcat@broadinstitute.org" >> /etc/rc.local
    echo "pwconv"  >> /etc/rc.local

	echo "echo \"touch /var/lock/subsys/local\" > /etc/rc.local && shutdown -rf 1" >> /etc/rc.local

	;;

*)
        echo "Oops.  Fix me."
esac
#End IBM/Dell Logic.

#Turn services off
for SERVICE in iptables bluetooth cups gpm
do
	chkconfig $SERVICE off
done

sed -i "s/$(hostname)//g" /etc/hosts

echo "
	xCAT build from xcat2
	 $(hostname) postinstall
	at $(date)" | mail -s "xCAT build from xCAT2  -- $(hostname) postbuild ($(date +%F | tr -d '-'))" xcat@broadinstitute.org

exit 0

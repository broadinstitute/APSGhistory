#
# Copyright (c) 2006-2008, Greg M. Kurtzer, Arthur A. Stevens and
# Infiscale, Inc. All rights reserved
#

# This is the primary configuration file for Perceus

# Define the network device on this system that is connected directly
# and privately to the nodes. This device will be responding to DHCP
# requests thus make sure you specify the proper device name!
# note: This device must be configured for IP based communication.
master network device =

# What protocol should be used to retireve the VNFS information. Generally
# Supported options in this version of Perceus are: 'xget', 'nfs', and 'http'
# but others may also be available via specialized VNFS capsules or
# feature enhancing Perceus Modules.
vnfs transfer method = nfs

# Define the IP Address of the network file server. This address must be
# set before Perceus can operate. If this option is left blank, the IP
# address of the "master network device" defined above will be used.
vnfs transfer master = 

# Define the VNFS transfer location if it is different from the default
# ('statedir'). This gets used differently for different transfer methods
# (e.g. NFS this replaces the path to statedir, while with http it is gets
# prepended to the "/perceus" path).
vnfs transfer prefix = 

# What is the default database that should be used. If this option is not
# specified, then the default is "hash" to remain compatible with
# previous versions of Perceus. Other options are 'btree' and 'mysql'.
# note: btree is default as of version 1.4.
database type = btree

# If you selected an SQL database solution as your database type above,
# then you will need to specify the SQL user login information here.
# note: this will be ignored for non-SQL database types.
database server = localhost
database name = perceus
database user = db user
database pass = db pass

# To allow for better scaling the Perceus daemon 'preforks' which creates
# multiple subprocesses to better handle large number of simultaneous
# connections. The default is 4 which on most systems can support
# thousands of nodes per minute but for best tuning this number is highly
# dependant on system configuration (both hardware and software).
prefork = 4

# How long (in seconds) should we wait before considering a node as dead.
# Note, that if you are not running node client daemons, then after
# provisioning the node will never check in, and will no doubt expire.
# Considering that the default node check in is 5 minutes, setting this
# to double that should ensure that any living node would have checked in
# by then (600).
node timeout = 600


